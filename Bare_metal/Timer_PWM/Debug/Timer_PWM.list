
Timer_PWM.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000bc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001f8  080000bc  080000bc  000100bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002b4  080002bc  000102bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002b4  080002b4  000102bc  2**0
                  CONTENTS
  4 .ARM          00000000  080002b4  080002b4  000102bc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002b4  080002bc  000102bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002b4  080002b4  000102b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080002b8  080002b8  000102b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000102bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080002bc  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080002bc  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000102bc  2**0
                  CONTENTS, READONLY
 12 .debug_info   000004e4  00000000  00000000  000102e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000010a  00000000  00000000  000107c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000050  00000000  00000000  000108d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000038  00000000  00000000  00010928  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000bd6a  00000000  00000000  00010960  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000549  00000000  00000000  0001c6ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004274d  00000000  00000000  0001cc13  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0005f360  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000007c  00000000  00000000  0005f3b0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000bc <__do_global_dtors_aux>:
 80000bc:	b510      	push	{r4, lr}
 80000be:	4c06      	ldr	r4, [pc, #24]	; (80000d8 <__do_global_dtors_aux+0x1c>)
 80000c0:	7823      	ldrb	r3, [r4, #0]
 80000c2:	2b00      	cmp	r3, #0
 80000c4:	d107      	bne.n	80000d6 <__do_global_dtors_aux+0x1a>
 80000c6:	4b05      	ldr	r3, [pc, #20]	; (80000dc <__do_global_dtors_aux+0x20>)
 80000c8:	2b00      	cmp	r3, #0
 80000ca:	d002      	beq.n	80000d2 <__do_global_dtors_aux+0x16>
 80000cc:	4804      	ldr	r0, [pc, #16]	; (80000e0 <__do_global_dtors_aux+0x24>)
 80000ce:	e000      	b.n	80000d2 <__do_global_dtors_aux+0x16>
 80000d0:	bf00      	nop
 80000d2:	2301      	movs	r3, #1
 80000d4:	7023      	strb	r3, [r4, #0]
 80000d6:	bd10      	pop	{r4, pc}
 80000d8:	20000000 	.word	0x20000000
 80000dc:	00000000 	.word	0x00000000
 80000e0:	0800029c 	.word	0x0800029c

080000e4 <frame_dummy>:
 80000e4:	4b04      	ldr	r3, [pc, #16]	; (80000f8 <frame_dummy+0x14>)
 80000e6:	b510      	push	{r4, lr}
 80000e8:	2b00      	cmp	r3, #0
 80000ea:	d003      	beq.n	80000f4 <frame_dummy+0x10>
 80000ec:	4903      	ldr	r1, [pc, #12]	; (80000fc <frame_dummy+0x18>)
 80000ee:	4804      	ldr	r0, [pc, #16]	; (8000100 <frame_dummy+0x1c>)
 80000f0:	e000      	b.n	80000f4 <frame_dummy+0x10>
 80000f2:	bf00      	nop
 80000f4:	bd10      	pop	{r4, pc}
 80000f6:	46c0      	nop			; (mov r8, r8)
 80000f8:	00000000 	.word	0x00000000
 80000fc:	20000004 	.word	0x20000004
 8000100:	0800029c 	.word	0x0800029c

08000104 <delay>:
 */

#include "stm32g070xx.h"

void delay(unsigned int a)
{
 8000104:	b580      	push	{r7, lr}
 8000106:	b084      	sub	sp, #16
 8000108:	af00      	add	r7, sp, #0
 800010a:	6078      	str	r0, [r7, #4]
	for(int i=0;i<a;i++)
 800010c:	2300      	movs	r3, #0
 800010e:	60fb      	str	r3, [r7, #12]
 8000110:	e00d      	b.n	800012e <delay+0x2a>
		for(int j=0;j<600;j++);
 8000112:	2300      	movs	r3, #0
 8000114:	60bb      	str	r3, [r7, #8]
 8000116:	e002      	b.n	800011e <delay+0x1a>
 8000118:	68bb      	ldr	r3, [r7, #8]
 800011a:	3301      	adds	r3, #1
 800011c:	60bb      	str	r3, [r7, #8]
 800011e:	68ba      	ldr	r2, [r7, #8]
 8000120:	2396      	movs	r3, #150	; 0x96
 8000122:	009b      	lsls	r3, r3, #2
 8000124:	429a      	cmp	r2, r3
 8000126:	dbf7      	blt.n	8000118 <delay+0x14>
	for(int i=0;i<a;i++)
 8000128:	68fb      	ldr	r3, [r7, #12]
 800012a:	3301      	adds	r3, #1
 800012c:	60fb      	str	r3, [r7, #12]
 800012e:	68fb      	ldr	r3, [r7, #12]
 8000130:	687a      	ldr	r2, [r7, #4]
 8000132:	429a      	cmp	r2, r3
 8000134:	d8ed      	bhi.n	8000112 <delay+0xe>
}
 8000136:	46c0      	nop			; (mov r8, r8)
 8000138:	46c0      	nop			; (mov r8, r8)
 800013a:	46bd      	mov	sp, r7
 800013c:	b004      	add	sp, #16
 800013e:	bd80      	pop	{r7, pc}

08000140 <main>:

int main(void)
{
 8000140:	b580      	push	{r7, lr}
 8000142:	b082      	sub	sp, #8
 8000144:	af00      	add	r7, sp, #0
	RCC->IOPENR=(1U<<0);
 8000146:	4b29      	ldr	r3, [pc, #164]	; (80001ec <main+0xac>)
 8000148:	2201      	movs	r2, #1
 800014a:	635a      	str	r2, [r3, #52]	; 0x34
	RCC->APBENR1=(1U<<1);
 800014c:	4b27      	ldr	r3, [pc, #156]	; (80001ec <main+0xac>)
 800014e:	2202      	movs	r2, #2
 8000150:	63da      	str	r2, [r3, #60]	; 0x3c
	GPIOA->MODER|=(1U<<13);
 8000152:	23a0      	movs	r3, #160	; 0xa0
 8000154:	05db      	lsls	r3, r3, #23
 8000156:	681a      	ldr	r2, [r3, #0]
 8000158:	23a0      	movs	r3, #160	; 0xa0
 800015a:	05db      	lsls	r3, r3, #23
 800015c:	2180      	movs	r1, #128	; 0x80
 800015e:	0189      	lsls	r1, r1, #6
 8000160:	430a      	orrs	r2, r1
 8000162:	601a      	str	r2, [r3, #0]
	GPIOA->MODER&=~(1U<<12);
 8000164:	23a0      	movs	r3, #160	; 0xa0
 8000166:	05db      	lsls	r3, r3, #23
 8000168:	681a      	ldr	r2, [r3, #0]
 800016a:	23a0      	movs	r3, #160	; 0xa0
 800016c:	05db      	lsls	r3, r3, #23
 800016e:	4920      	ldr	r1, [pc, #128]	; (80001f0 <main+0xb0>)
 8000170:	400a      	ands	r2, r1
 8000172:	601a      	str	r2, [r3, #0]

	GPIOA->AFR[0]|=0X01000000;
 8000174:	23a0      	movs	r3, #160	; 0xa0
 8000176:	05db      	lsls	r3, r3, #23
 8000178:	6a1a      	ldr	r2, [r3, #32]
 800017a:	23a0      	movs	r3, #160	; 0xa0
 800017c:	05db      	lsls	r3, r3, #23
 800017e:	2180      	movs	r1, #128	; 0x80
 8000180:	0449      	lsls	r1, r1, #17
 8000182:	430a      	orrs	r2, r1
 8000184:	621a      	str	r2, [r3, #32]

	uint32_t i=0;
 8000186:	2300      	movs	r3, #0
 8000188:	607b      	str	r3, [r7, #4]
	TIM3->PSC=0;
 800018a:	4b1a      	ldr	r3, [pc, #104]	; (80001f4 <main+0xb4>)
 800018c:	2200      	movs	r2, #0
 800018e:	629a      	str	r2, [r3, #40]	; 0x28
	TIM3->ARR=65535;
 8000190:	4b18      	ldr	r3, [pc, #96]	; (80001f4 <main+0xb4>)
 8000192:	4a19      	ldr	r2, [pc, #100]	; (80001f8 <main+0xb8>)
 8000194:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM3->CNT=0;
 8000196:	4b17      	ldr	r3, [pc, #92]	; (80001f4 <main+0xb4>)
 8000198:	2200      	movs	r2, #0
 800019a:	625a      	str	r2, [r3, #36]	; 0x24
	TIM3->CCMR1|=(1<<5)|(1<<6);
 800019c:	4b15      	ldr	r3, [pc, #84]	; (80001f4 <main+0xb4>)
 800019e:	699a      	ldr	r2, [r3, #24]
 80001a0:	4b14      	ldr	r3, [pc, #80]	; (80001f4 <main+0xb4>)
 80001a2:	2160      	movs	r1, #96	; 0x60
 80001a4:	430a      	orrs	r2, r1
 80001a6:	619a      	str	r2, [r3, #24]
	TIM3->CCER=1;
 80001a8:	4b12      	ldr	r3, [pc, #72]	; (80001f4 <main+0xb4>)
 80001aa:	2201      	movs	r2, #1
 80001ac:	621a      	str	r2, [r3, #32]

	TIM3->CR1=1;
 80001ae:	4b11      	ldr	r3, [pc, #68]	; (80001f4 <main+0xb4>)
 80001b0:	2201      	movs	r2, #1
 80001b2:	601a      	str	r2, [r3, #0]

	while(1)
	{
		while(i<65535)
 80001b4:	e008      	b.n	80001c8 <main+0x88>
		{
			TIM3->CCR1=i;
 80001b6:	4b0f      	ldr	r3, [pc, #60]	; (80001f4 <main+0xb4>)
 80001b8:	687a      	ldr	r2, [r7, #4]
 80001ba:	635a      	str	r2, [r3, #52]	; 0x34
			i+=100;
 80001bc:	687b      	ldr	r3, [r7, #4]
 80001be:	3364      	adds	r3, #100	; 0x64
 80001c0:	607b      	str	r3, [r7, #4]
			delay(1);
 80001c2:	2001      	movs	r0, #1
 80001c4:	f7ff ff9e 	bl	8000104 <delay>
		while(i<65535)
 80001c8:	687b      	ldr	r3, [r7, #4]
 80001ca:	4a0c      	ldr	r2, [pc, #48]	; (80001fc <main+0xbc>)
 80001cc:	4293      	cmp	r3, r2
 80001ce:	d9f2      	bls.n	80001b6 <main+0x76>
		}
		while(i>0)
 80001d0:	e008      	b.n	80001e4 <main+0xa4>
		{
			TIM3->CCR1=i;
 80001d2:	4b08      	ldr	r3, [pc, #32]	; (80001f4 <main+0xb4>)
 80001d4:	687a      	ldr	r2, [r7, #4]
 80001d6:	635a      	str	r2, [r3, #52]	; 0x34
			i-=100;
 80001d8:	687b      	ldr	r3, [r7, #4]
 80001da:	3b64      	subs	r3, #100	; 0x64
 80001dc:	607b      	str	r3, [r7, #4]
			delay(1);
 80001de:	2001      	movs	r0, #1
 80001e0:	f7ff ff90 	bl	8000104 <delay>
		while(i>0)
 80001e4:	687b      	ldr	r3, [r7, #4]
 80001e6:	2b00      	cmp	r3, #0
 80001e8:	d1f3      	bne.n	80001d2 <main+0x92>
		while(i<65535)
 80001ea:	e7ed      	b.n	80001c8 <main+0x88>
 80001ec:	40021000 	.word	0x40021000
 80001f0:	ffffefff 	.word	0xffffefff
 80001f4:	40000400 	.word	0x40000400
 80001f8:	0000ffff 	.word	0x0000ffff
 80001fc:	0000fffe 	.word	0x0000fffe

08000200 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000200:	480d      	ldr	r0, [pc, #52]	; (8000238 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000202:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000204:	e000      	b.n	8000208 <Reset_Handler+0x8>
 8000206:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000208:	480c      	ldr	r0, [pc, #48]	; (800023c <LoopForever+0x6>)
  ldr r1, =_edata
 800020a:	490d      	ldr	r1, [pc, #52]	; (8000240 <LoopForever+0xa>)
  ldr r2, =_sidata
 800020c:	4a0d      	ldr	r2, [pc, #52]	; (8000244 <LoopForever+0xe>)
  movs r3, #0
 800020e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000210:	e002      	b.n	8000218 <LoopCopyDataInit>

08000212 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000212:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000214:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000216:	3304      	adds	r3, #4

08000218 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000218:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800021a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800021c:	d3f9      	bcc.n	8000212 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800021e:	4a0a      	ldr	r2, [pc, #40]	; (8000248 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000220:	4c0a      	ldr	r4, [pc, #40]	; (800024c <LoopForever+0x16>)
  movs r3, #0
 8000222:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000224:	e001      	b.n	800022a <LoopFillZerobss>

08000226 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000226:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000228:	3204      	adds	r2, #4

0800022a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800022a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800022c:	d3fb      	bcc.n	8000226 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800022e:	f000 f811 	bl	8000254 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000232:	f7ff ff85 	bl	8000140 <main>

08000236 <LoopForever>:

LoopForever:
  b LoopForever
 8000236:	e7fe      	b.n	8000236 <LoopForever>
  ldr   r0, =_estack
 8000238:	20009000 	.word	0x20009000
  ldr r0, =_sdata
 800023c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000240:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000244:	080002bc 	.word	0x080002bc
  ldr r2, =_sbss
 8000248:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800024c:	2000001c 	.word	0x2000001c

08000250 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000250:	e7fe      	b.n	8000250 <ADC_IRQHandler>
	...

08000254 <__libc_init_array>:
 8000254:	b570      	push	{r4, r5, r6, lr}
 8000256:	2600      	movs	r6, #0
 8000258:	4d0c      	ldr	r5, [pc, #48]	; (800028c <__libc_init_array+0x38>)
 800025a:	4c0d      	ldr	r4, [pc, #52]	; (8000290 <__libc_init_array+0x3c>)
 800025c:	1b64      	subs	r4, r4, r5
 800025e:	10a4      	asrs	r4, r4, #2
 8000260:	42a6      	cmp	r6, r4
 8000262:	d109      	bne.n	8000278 <__libc_init_array+0x24>
 8000264:	2600      	movs	r6, #0
 8000266:	f000 f819 	bl	800029c <_init>
 800026a:	4d0a      	ldr	r5, [pc, #40]	; (8000294 <__libc_init_array+0x40>)
 800026c:	4c0a      	ldr	r4, [pc, #40]	; (8000298 <__libc_init_array+0x44>)
 800026e:	1b64      	subs	r4, r4, r5
 8000270:	10a4      	asrs	r4, r4, #2
 8000272:	42a6      	cmp	r6, r4
 8000274:	d105      	bne.n	8000282 <__libc_init_array+0x2e>
 8000276:	bd70      	pop	{r4, r5, r6, pc}
 8000278:	00b3      	lsls	r3, r6, #2
 800027a:	58eb      	ldr	r3, [r5, r3]
 800027c:	4798      	blx	r3
 800027e:	3601      	adds	r6, #1
 8000280:	e7ee      	b.n	8000260 <__libc_init_array+0xc>
 8000282:	00b3      	lsls	r3, r6, #2
 8000284:	58eb      	ldr	r3, [r5, r3]
 8000286:	4798      	blx	r3
 8000288:	3601      	adds	r6, #1
 800028a:	e7f2      	b.n	8000272 <__libc_init_array+0x1e>
 800028c:	080002b4 	.word	0x080002b4
 8000290:	080002b4 	.word	0x080002b4
 8000294:	080002b4 	.word	0x080002b4
 8000298:	080002b8 	.word	0x080002b8

0800029c <_init>:
 800029c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800029e:	46c0      	nop			; (mov r8, r8)
 80002a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002a2:	bc08      	pop	{r3}
 80002a4:	469e      	mov	lr, r3
 80002a6:	4770      	bx	lr

080002a8 <_fini>:
 80002a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002aa:	46c0      	nop			; (mov r8, r8)
 80002ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002ae:	bc08      	pop	{r3}
 80002b0:	469e      	mov	lr, r3
 80002b2:	4770      	bx	lr
